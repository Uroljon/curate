%%{init: {'theme':'dark', 'themeVariables': { 'primaryColor': '#1f2937', 'primaryTextColor': '#fff', 'primaryBorderColor': '#374151', 'lineColor': '#6b7280', 'secondaryColor': '#374151', 'tertiaryColor': '#1f2937'}}}%%

graph TB
    %% Phase 1: Document Upload
    subgraph Phase1["üì§ PHASE 1: DOCUMENT UPLOAD"]
        Upload["PDF File Upload<br/>POST /upload"]
        FileStore["1. File Storage<br/>üìÅ data/uploads/"]
        TextExtract["2. Text Extraction<br/>üìÑ parser.py:80"]
        PyMuPDF["PyMuPDF Text Extract"]
        CharCheck{"Text > 10 chars?"}
        OCRFallback["OCR Fallback<br/>üîç Tesseract"]
        OCRFilter["OCR Quality Filter<br/>‚Ä¢ Language detection<br/>‚Ä¢ Spell check 60%<br/>‚Ä¢ Symbol filter 30%"]
        Chunking["3. Semantic Chunking<br/>‚úÇÔ∏è chunker.py:229<br/>5K-7.5K chars"]
        Embedding["4. Embedding Generation<br/>üß† embedder.py:19<br/>ChromaDB storage"]
        
        Upload --> FileStore
        FileStore --> TextExtract
        TextExtract --> PyMuPDF
        PyMuPDF --> CharCheck
        CharCheck -->|Yes| Chunking
        CharCheck -->|No| OCRFallback
        OCRFallback --> OCRFilter
        OCRFilter --> Chunking
        Chunking --> Embedding
    end

    %% Phase 2: Structure Extraction
    subgraph Phase2["üîç PHASE 2: STRUCTURE EXTRACTION"]
        ExtractChoice{"Choose Endpoint"}
        
        %% Multi-stage path
        MultiStage["POST /extract_structure<br/>Multi-stage extraction"]
        GetAllChunks["Get ALL chunks<br/>from ChromaDB"]
        LLMChunk1["chunk_for_llm()<br/>15K-20K chars"]
        Stage1["STAGE 1<br/>Find Action Fields"]
        Stage2["STAGE 2<br/>Find Projects per Field"]
        Stage3["STAGE 3<br/>Extract Measures & Indicators"]
        
        %% Fast extraction path
        FastExtract["POST /extract_structure_fast<br/>Single-pass extraction"]
        GetLimitedChunks["Get chunks<br/>(max 50)"]
        LLMChunk2["chunk_for_llm()<br/>15K-20K chars"]
        SinglePass["Single-pass extraction<br/>extract_structures_with_retry()"]
        
        %% Common deduplication
        Dedup["Deduplication<br/>‚Ä¢ Merge fields<br/>‚Ä¢ Merge projects"]
        Result["Return JSON Result"]
        
        ExtractChoice -->|Comprehensive| MultiStage
        ExtractChoice -->|Fast| FastExtract
        
        MultiStage --> GetAllChunks
        GetAllChunks --> LLMChunk1
        LLMChunk1 --> Stage1
        Stage1 --> Stage2
        Stage2 --> Stage3
        Stage3 --> Dedup
        
        FastExtract --> GetLimitedChunks
        GetLimitedChunks --> LLMChunk2
        LLMChunk2 --> SinglePass
        SinglePass --> Dedup
        
        Dedup --> Result
    end

    %% Connect phases
    Embedding --> ExtractChoice

    %% Retry mechanisms (separate subgraph)
    subgraph Retries["üîÑ RETRY & FALLBACK MECHANISMS"]
        R1["1. OCR Fallback<br/>Trigger: <10 chars<br/>‚Üí Tesseract OCR"]
        R2["2. LLM Retry<br/>Max: 1 retry<br/>‚Üí Empty list on fail"]
        R3["3. JSON Repair<br/>On validation fail<br/>‚Üí json-repair library"]
        R4["4. Structured Output<br/>Primary: Pydantic<br/>‚Üí Repair ‚Üí None"]
        R5["5. Timeouts<br/>Ollama: 180s<br/>‚Üí No retry"]
        R6["6. Progressive<br/>Multi-stage only<br/>‚Üí Accumulate data"]
    end

    %% Error handling flow
    subgraph ErrorFlow["‚ö†Ô∏è ERROR HANDLING FLOW"]
        LLMQuery["LLM Query"]
        HTTPReq["HTTP Request<br/>Timeout: 180s"]
        Success{"Success?"}
        ParseJSON["Parse JSON"]
        ValidJSON{"Valid?"}
        JSONRepair["JSON Repair"]
        RepairSuccess{"Success?"}
        ReturnModel["Return Model"]
        ReturnNone["Return None<br/>(Skip chunk)"]
        
        LLMQuery --> HTTPReq
        HTTPReq --> Success
        Success -->|Yes| ParseJSON
        Success -->|No| ReturnNone
        ParseJSON --> ValidJSON
        ValidJSON -->|Yes| ReturnModel
        ValidJSON -->|No| JSONRepair
        JSONRepair --> RepairSuccess
        RepairSuccess -->|Yes| ReturnModel
        RepairSuccess -->|No| ReturnNone
    end

    %% Styling
    classDef phase fill:#1e40af,stroke:#3b82f6,stroke-width:2px,color:#fff
    classDef process fill:#059669,stroke:#10b981,stroke-width:2px,color:#fff
    classDef decision fill:#dc2626,stroke:#ef4444,stroke-width:2px,color:#fff
    classDef storage fill:#7c3aed,stroke:#8b5cf6,stroke-width:2px,color:#fff
    classDef retry fill:#ea580c,stroke:#f97316,stroke-width:2px,color:#fff
    
    class Phase1,Phase2 phase
    class FileStore,TextExtract,PyMuPDF,OCRFallback,OCRFilter,Chunking,Embedding,GetAllChunks,LLMChunk1,Stage1,Stage2,Stage3,GetLimitedChunks,LLMChunk2,SinglePass,Dedup process
    class CharCheck,ExtractChoice,Success,ValidJSON,RepairSuccess decision
    class Result storage
    class R1,R2,R3,R4,R5,R6 retry